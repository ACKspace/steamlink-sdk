diff --git a/data/Makefile.am b/data/Makefile.am
index 9af4ca1..7df2cf5 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -2,13 +2,16 @@
 # Install, and make if needed, prboom.wad
 #
 
-noinst_PROGRAMS = rdatawad
-rdatawad_SOURCES = rd_main.c
-rdatawad_SOURCES += rd_util.c rd_util.h
-rdatawad_SOURCES += rd_output.c rd_output.h
-rdatawad_SOURCES += rd_sound.c rd_sound.h
-rdatawad_SOURCES += rd_palette.c rd_palette.h
-rdatawad_SOURCES += rd_graphic.c rd_graphic.h
+#noinst_PROGRAMS = rdatawad
+#rdatawad_SOURCES = rd_main.c
+#rdatawad_SOURCES += rd_util.c rd_util.h
+#rdatawad_SOURCES += rd_output.c rd_output.h
+#rdatawad_SOURCES += rd_sound.c rd_sound.h
+#rdatawad_SOURCES += rd_palette.c rd_palette.h
+#rdatawad_SOURCES += rd_graphic.c rd_graphic.h
+
+rdatawad: rd_main.c rd_util.c rd_output.c rd_sound.c rd_palette.c rd_graphic.c
+	gcc -o $@ $^ -I..
 
 waddir=$(DOOMWADDIR)
 wad_DATA=prboom-plus.wad
diff --git a/src/SDL/i_joy.c b/src/SDL/i_joy.c
index 040fd9b..b93785c 100644
--- a/src/SDL/i_joy.c
+++ b/src/SDL/i_joy.c
@@ -53,69 +53,80 @@ int joydown;
 
 int usejoystick;
 
-#ifdef HAVE_SDL_JOYSTICKGETAXIS
-static SDL_Joystick *joystick;
-#endif
+static SDL_GameController *controller;
 
-static void I_EndJoystick(void)
+static void CheckStartButton()
 {
-  lprintf(LO_DEBUG, "I_EndJoystick : closing joystick\n");
+  static int was_start_button_down;
+  int start_button_down;
+
+  start_button_down = SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_START);
+  if (start_button_down != was_start_button_down) {
+    event_t ev;
+
+    ev.type = start_button_down ? ev_keydown : ev_keyup;
+    ev.data1 = KEYD_ESCAPE;
+    D_PostEvent(&ev);
+
+    was_start_button_down = start_button_down;
+  }
 }
 
 void I_PollJoystick(void)
 {
-#ifdef HAVE_SDL_JOYSTICKGETAXIS
   event_t ev;
   Sint16 axis_value;
 
-  if (!usejoystick || (!joystick)) return;
+  if (!controller) return;
+
   ev.type = ev_joystick;
   ev.data1 =
-    (SDL_JoystickGetButton(joystick, 0)<<0) |
-    (SDL_JoystickGetButton(joystick, 1)<<1) |
-    (SDL_JoystickGetButton(joystick, 2)<<2) |
-    (SDL_JoystickGetButton(joystick, 3)<<3) |
-    (SDL_JoystickGetButton(joystick, 4)<<4) |
-    (SDL_JoystickGetButton(joystick, 5)<<5) |
-    (SDL_JoystickGetButton(joystick, 6)<<6) |
-    (SDL_JoystickGetButton(joystick, 7)<<7);
-  axis_value = SDL_JoystickGetAxis(joystick, 0) / 3000;
-  if (abs(axis_value)<7) axis_value=0;
-  ev.data2 = axis_value;
-  axis_value = SDL_JoystickGetAxis(joystick, 1) / 3000;
-  if (abs(axis_value)<7) axis_value=0;
-  ev.data3 = axis_value;
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_A)<<0) |
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_B)<<1) |
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_X)<<2) |
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_Y)<<3) |
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_LEFTSHOULDER)<<4) |
+    (SDL_GameControllerGetButton(controller, SDL_CONTROLLER_BUTTON_RIGHTSHOULDER)<<5);
+
+  axis_value = SDL_GameControllerGetAxis(controller, SDL_CONTROLLER_AXIS_TRIGGERRIGHT);
+  if (axis_value >= SDL_JOYSTICK_AXIS_MAX/2)
+    ev.data1 |= 1;
+
+  axis_value = SDL_GameControllerGetAxis(controller, SDL_CONTROLLER_AXIS_LEFTX);
+  if (axis_value <= -SDL_JOYSTICK_AXIS_MAX/2)
+    ev.data2 = -1;
+  else if (axis_value >= SDL_JOYSTICK_AXIS_MAX/2)
+    ev.data2 = 1;
+  else
+    ev.data2 = 0;
+
+  axis_value = SDL_GameControllerGetAxis(controller, SDL_CONTROLLER_AXIS_LEFTY);
+  if (axis_value <= -SDL_JOYSTICK_AXIS_MAX/2)
+    ev.data3 = -1;
+  else if (axis_value >= SDL_JOYSTICK_AXIS_MAX/2)
+    ev.data3 = 1;
+  else
+    ev.data3 = 0;
 
   D_PostEvent(&ev);
-#endif
+
+  CheckStartButton();
 }
 
 void I_InitJoystick(void)
 {
-#ifdef HAVE_SDL_JOYSTICKGETAXIS
-  const char* fname = "I_InitJoystick : ";
-  int num_joysticks;
-
-  if (!usejoystick) return;
-  SDL_InitSubSystem(SDL_INIT_JOYSTICK);
-  num_joysticks=SDL_NumJoysticks();
-  if (M_CheckParm("-nojoy") || (usejoystick>num_joysticks) || (usejoystick<0)) {
-    if ((usejoystick > num_joysticks) || (usejoystick < 0))
-      lprintf(LO_WARN, "%sinvalid joystick %d\n", fname, usejoystick);
-    else
-      lprintf(LO_INFO, "%suser disabled\n", fname);
-    return;
-  }
-  joystick=SDL_JoystickOpen(usejoystick-1);
-  if (!joystick)
-    lprintf(LO_ERROR, "%serror opening joystick %d\n", fname, usejoystick);
-  else {
-    atexit(I_EndJoystick);
-    lprintf(LO_INFO, "%sopened %s\n", fname, SDL_JoystickName(joystick));
-    joyup = 32767;
-    joydown = -32768;
-    joyright = 32767;
-    joyleft = -32768;
+  int i;
+
+  SDL_InitSubSystem(SDL_INIT_GAMECONTROLLER);
+  for (i = 0; i < SDL_NumJoysticks(); ++i) {
+    controller = SDL_GameControllerOpen(i);
+    if (controller) {
+      lprintf(LO_INFO, "I_InitJoystick : opened %s\n", SDL_GameControllerName(controller));
+      joyup = 32767;
+      joydown = -32768;
+      joyright = 32767;
+      joyleft = -32768;
+      break;
+    }
   }
-#endif
 }
diff --git a/src/m_menu.c b/src/m_menu.c
index 6eecd90..3b2a17a 100644
--- a/src/m_menu.c
+++ b/src/m_menu.c
@@ -4501,9 +4501,15 @@ dboolean M_Responder (event_t* ev) {
   // Take care of any messages that need input
 
   if (messageToPrint) {
-    if (messageNeedsInput == true &&
-  !(ch == ' ' || ch == 'n' || ch == 'y' || ch == key_escape)) // phares
-      return false;
+    if (messageNeedsInput == true) {
+      if (ev->type == ev_joystick && (ev->data1&1))
+        ch = 'y';
+      else if (ev->type == ev_joystick && (ev->data1&2))
+        ch = 'n';
+
+      if (!(ch == ' ' || ch == 'n' || ch == 'y' || ch == key_escape)) // phares
+        return false;
+    }
 
     menuactive = messageLastMenuActive;
     messageToPrint = 0;
