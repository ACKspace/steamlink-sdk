diff --git a/src/graphics/graphics.cpp b/src/graphics/graphics.cpp
index b521a00..a5f585b 100644
--- a/src/graphics/graphics.cpp
+++ b/src/graphics/graphics.cpp
@@ -49,7 +49,7 @@ bool Graphics::init(int resolution)
     screen_bpp = 16; // the default
   }
 
-  if (SetResolution(resolution, false))
+  if (SetResolution(7, false))
     return 1;
 
   if (Tileset::Init())
@@ -84,7 +84,7 @@ bool Graphics::InitVideo()
   if (screen)
     delete screen;
 
-  uint32_t window_flags = SDL_WINDOW_SHOWN;
+  uint32_t window_flags = SDL_WINDOW_FULLSCREEN_DESKTOP;
 
   const Graphics::gres_t *res = GetRes();
 
@@ -261,6 +261,7 @@ const Graphics::gres_t *Graphics::GetRes()
          {(char *)"1600x1200", 1600, 1200, 320, 240, 5, false, true},
          // widescreen
          {(char *)"480x272", 480, 272, 480, 272, 1, true, true},
+         {(char *)"1280x720", 1280, 720, 427, 240, 3, true, true},
          {(char *)"1360x768", 1360, 768, 454, 256, 3, true, true},
          {(char *)"1366x768", 1366, 768, 455, 256, 3, true, true},
          {(char *)"1440x900", 1440, 900, 480, 300, 3, true, true},
diff --git a/src/pause/options.cpp b/src/pause/options.cpp
index 972bfd3..0b27bd8 100644
--- a/src/pause/options.cpp
+++ b/src/pause/options.cpp
@@ -168,7 +168,6 @@ static void EnterMainMenu()
 
   dlg->Clear();
 
-  dlg->AddItem("Graphics", EnterGraphicsMenu);
   dlg->AddItem("Sound", EnterSoundMenu);
   dlg->AddItem("Controls", EnterControlsMenu);
 
diff --git a/src/settings.cpp b/src/settings.cpp
index 211ff1d..47530a9 100644
--- a/src/settings.cpp
+++ b/src/settings.cpp
@@ -75,7 +75,7 @@ bool settings_load(Settings *setfile)
     stat("No saved settings; using defaults.");
 
     memset(setfile, 0, sizeof(Settings));
-    setfile->resolution     = 2; // 640x480 Windowed, should be safe value
+    setfile->resolution     = 7; // 1280*720 Windowed, should be safe value
     setfile->last_save_slot = 0;
     setfile->fullscreen     = false;
 
diff --git a/src/sound/Organya.cpp b/src/sound/Organya.cpp
index e9afb9c..e4c8dbc 100644
--- a/src/sound/Organya.cpp
+++ b/src/sound/Organya.cpp
@@ -228,34 +228,8 @@ void Song::Synth()
     {
       double pos = i.phaseacc;
       // Take a sample from the wave data.
-      /* We could do simply this: */
-      // int sample = i.cur_wave[ unsigned(pos) % i.cur_wavesize ];
-      /* But since we have plenty of time, use neat Lanczos filtering. */
-      /* This improves especially the low rumble noises substantially. */
-      enum
-      {
-        radius = 2
-      };
-      auto lanczos = [](double d) -> double {
-        if (d == 0.)
-          return 1.;
-        if (std::fabs(d) > radius)
-          return 0.;
-        double dr = (d *= 3.14159265) / radius;
-        return std::sin(d) * std::sin(dr) / (d * dr);
-      };
-      double scale = 1 / i.phaseinc > 1 ? 1 : 1 / i.phaseinc, density = 0, sample = 0;
-      int min = -radius / scale + pos - 0.5;
-      int max = radius / scale + pos + 0.5;
-      for (int m = min; m < max; ++m) // Collect a weighted average.
-      {
-        double factor = lanczos((m - pos + 0.5) * scale);
-        density += factor;
-        sample += i.cur_wave[m < 0 ? 0 : m % i.cur_wavesize] * factor;
-      }
-      if (density > 0.)
-        sample /= density; // Normalize*/
-      // Save audio in float32 format:
+      int sample = i.cur_wave[ (int)pos % i.cur_wavesize ]  * (1 - (pos - (double)((int)pos) ) );
+      sample += i.cur_wave[ ((int)pos+1) % i.cur_wavesize ] * (pos - (double)((int)pos) );
       samples[p * 2 + 0] += sample * left;
       samples[p * 2 + 1] += sample * right;
       i.phaseacc += i.phaseinc;
@@ -411,4 +385,4 @@ void Organya::runFade()
 }
 
 } // namespace Sound
-} // namespace NXE
\ No newline at end of file
+} // namespace NXE
